<script>
  /*
  Use an object as a fake namespace. Spiffy.
  */
  var LODO = new Object();
  LODO.orderList = <%= @orders_all.to_json(
    :include => {:company => {},
                 :customer => {},
                 :seller => {},
                 :transport => {},
                 :order_items => {:include => :product}})
  %>;
  LODO.billItemList = <%= @bill.bill_orders.to_json(
    :include => :bill_items) %>;
  LODO.billPrice = <%= @bill.price.to_json %>;
</script>


<% form_for(@bill) do |f| %>
  <%= f.error_messages %>


  <table id="order_template" style="display: none" class='striped'>
    <thead>
      <tr>
        <th><%= t(:product, :scope => :bills) -%></th>
	<th><%= t(:unit_price, :scope => :bills) -%></th>
	<th><%= t(:remaining, :scope => :bills) -%></th>
	<th><%= t(:amount, :scope => :bills) -%></th>
	<th><%= t(:discount, :scope => :bills) -%></th>
	<th><%= t(:total_price, :scope => :bills) -%></th>
      </tr>
    </thead>
    <tbody id='order_template_rows'></tbody>
    <tfoot>
      <tr>
	<td><%= t(:total_for_this_order, :scope => :bills) -%>:</td>
	<td id='order_template_unit_price'></td>
	<td></td>
	<td><input type='hidden' id='order_template_amount' name='order_template[amount]' value='1' /></td>
	<td>
	  <input type='text' id='order_template_discount' name='order_template[discount]' onkeyup="bills.validate();"/>
	  <input type='hidden' id='order_template_price' name='order_template[price]' name='order_template[price]' value=''/>
	</td>
	<td id='order_template_price_label'>0,00</td>
      </tr>
    </tfoot>
  </table>


  <table id="bill" class='striped'>
    <thead>
      <tr>
	<th><%= t(:order, :scope => :bills) -%></th>
	<th><%= t(:products, :scope => :bills) -%></th>
      </tr>
    </thead>
    <tbody id='bill_rows'></tbody>
    <tfoot>
      <tr>
	<td><%= t(:total, :scope => :bills) -%>:</td>
	<td>
          <table>
	    <tr>
	      <th><%= t(:product, :scope => :bills) -%></th>
	      <th><%= t(:unit_price, :scope => :bills) -%></th>
	      <th><%= t(:remaining, :scope => :bills) -%></th>
	      <th><%= t(:amount, :scope => :bills) -%></th>
	      <th><%= t(:discount, :scope => :bills) -%></th>
	      <th><%= t(:total_price, :scope => :bills) -%></th>
	    </tr>
            <tr>
	      <td><%= t(:total_for_all_orders, :scope => :bills) -%>:</td>
	      <td id='bill_unit_price'></td>
	      <td></td>
	      <td><input type='hidden' id='bill_amount' value='1' /></td>
              <td>
                <input type='text' id='bill_discount' onkeyup="bills.validate();"/>
 	        <input type='hidden' id='bill_price' name='bill[price]' value=''/>
              </td>
              <td id='bill_price_label'>0,00</td>
            </tr>
          </table>
	</td>
      </tr>
    </tfoot>
  </table>

  <button onClick='bills.addOrder();' type='button'><%= t(:add_order, :scope => :bills) -%></button>

  <p>
    <%= f.label :delivery_date, t(:delivery_date, :scope => :bills) %><br />
    <%= f.date_select :delivery_date %>
  </p>
  <p>
    <%= f.label :billing_date, t(:billing_date, :scope => :bills) %><br />
    <%= f.date_select :billing_date %>
  </p>
  <p>
    <%= f.submit t(:create, :scope => :bills) %>
  </p>
<% end %>

<script>
  bills.addPredefined();
</script>
