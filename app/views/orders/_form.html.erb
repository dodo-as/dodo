<script>
  /*
  Use an object as a fake namespace. Spiffy.
  */
  var LODO = new Object();
  LODO.productList = <%= @products_all.to_json %>;
  LODO.orderItemList = <%= @order.order_items.to_json %>;
</script>

<% form_for(@order) do |f| %>
  <%= f.error_messages %>

  <table class='striped'>
	<thead>
	  <tr>
		<th><%= t(:product, :scope => :orders) -%></th>
		<th><%= t(:unit_price, :scope => :orders) -%></th>
		<th><%= t(:amount, :scope => :orders) -%></th>
		<th><%= t(:discount, :scope => :orders) -%></th>
		<th><%= t(:total_price, :scope => :orders) -%></th>
		<th></th>
	  </tr>
	</thead>
    <tbody id='products'></tbody>
    <tfoot>
      <tr>
	<td></td>
	<td></td>
	<td></td>
	<td>
	  <input type='text' id='discount_total' value='<%= h @order.discount%>' onkeyup="orders.validate();"/>
	  <input type='hidden' name='order[price]' id='price' value=''/>
	</td>
	<td id='dynfield_sum'>0,00</td>
	<td></td>
      </tr>
    </tfoot>
  </table>

  <button onClick='orders.addProduct();' type='button'><%= t(:add_product, :scope => :orders) -%></button>
  
  <p>
    <%= f.label :mva, t(:vat, :scope => :orders) %><br />
    <%= f.text_field :mva %>
  </p>
  <p>
    <%= f.label :order_date, t(:order_date, :scope => :orders) %><br />
    <%= f.unobtrusive_date_text_picker :order_date, :format=>'y-m-d', :divider=>'-' %>
  </p>
  <p>
    <%= f.label :requested_delivery_date, t(:requested_delivery_date, :scope => :orders) -%><br />
    <%= f.unobtrusive_date_text_picker :requested_delivery_date, :format=>'y-m-d', :divider=>'-' %>
  </p>
  <p>
    <%= f.label :seller_id, t(:seller, :scope => :orders) -%><br />
    <%= f.select :seller_id, @me.current_company.users.collect {|u| [ "#{u.login}: #{u.email}", u.id ] } %>
  </p>
  <p>
    <%= f.label :customer_id, t(:customer, :scope => :orders) %><br />
    <%= f.select :customer_id, (Account.find(@me.current_company.accounts).collect { |a| a.ledgers }).flatten.collect {|p| [ p.name, p.id ] } %>
  </p>
  <p>
    <%= f.label :delivery_address_id, t(:delivery_address, :scope => :orders) -%><br />
    <%= render :partial => "addresses/form", :locals => { :address => @order.delivery_address } %>
  </p>
  <p>
    <%= f.label :transport_id, t(:transport, :scope => :orders) -%><br />
    <%= f.select :transport_id, Company.find(:all).collect {|p| [ p.name, p.id ] } %>
  </p>
  <p>
    <%= f.label :unit_id, "Unit" -%><br />
    <%= f.select :unit_id, Unit.find(:all).collect {|p| [ p.name, p.id ] } %>
  </p>
  <p>
    <%= f.label :project_id, "Project" -%><br />
    <%= f.select :project_id, Project.find(:all).collect {|p| [ p.name, p.id ] } %>
  </p>
  <p>
    <%= f.submit t(:save, :scope => :orders) %>
  </p>
<% end %>

<script>
orders.addPredefined();
</script>
